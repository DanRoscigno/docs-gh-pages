"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[4622],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),f=c(r),m=a,d=f["".concat(l,".").concat(m)]||f[m]||p[m]||i;return r?n.createElement(d,s(s({ref:t},u),{},{components:r})):n.createElement(d,s({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=f;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},88509:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),s=["components"],o={sidebar_label:"HAVING"},l="HAVING Clause",c={unversionedId:"en/sql-reference/statements/select/having",id:"en/sql-reference/statements/select/having",title:"HAVING Clause",description:"Allows filtering the aggregation results produced by GROUP BY. It is similar to the WHERE clause, but the difference is that WHERE is performed before aggregation, while HAVING is performed after it.",source:"@site/docs/en/sql-reference/statements/select/having.md",sourceDirName:"en/sql-reference/statements/select",slug:"/en/sql-reference/statements/select/having",permalink:"/docs-gh-pages/update-quick-start/en/sql-reference/statements/select/having",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/sql-reference/statements/select/having.md",tags:[],version:"current",frontMatter:{sidebar_label:"HAVING"},sidebar:"english",previous:{title:"GROUP BY",permalink:"/docs-gh-pages/update-quick-start/en/sql-reference/statements/select/group-by"},next:{title:"INTERSECT",permalink:"/docs-gh-pages/update-quick-start/en/sql-reference/statements/select/intersect"}},u={},p=[{value:"Limitations",id:"limitations",level:2}],f={toc:p};function m(e){var t=e.components,r=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"having-clause"},"HAVING Clause"),(0,i.kt)("p",null,"Allows filtering the aggregation results produced by ",(0,i.kt)("a",{parentName:"p",href:"/docs-gh-pages/update-quick-start/en/sql-reference/statements/select/group-by"},"GROUP BY"),". It is similar to the ",(0,i.kt)("a",{parentName:"p",href:"/docs-gh-pages/update-quick-start/en/sql-reference/statements/select/where"},"WHERE")," clause, but the difference is that ",(0,i.kt)("inlineCode",{parentName:"p"},"WHERE")," is performed before aggregation, while ",(0,i.kt)("inlineCode",{parentName:"p"},"HAVING")," is performed after it."),(0,i.kt)("p",null,"It is possible to reference aggregation results from ",(0,i.kt)("inlineCode",{parentName:"p"},"SELECT")," clause in ",(0,i.kt)("inlineCode",{parentName:"p"},"HAVING")," clause by their alias. Alternatively, ",(0,i.kt)("inlineCode",{parentName:"p"},"HAVING")," clause can filter on results of additional aggregates that are not returned in query results."),(0,i.kt)("h2",{id:"limitations"},"Limitations"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"HAVING")," can\u2019t be used if aggregation is not performed. Use ",(0,i.kt)("inlineCode",{parentName:"p"},"WHERE")," instead."))}m.isMDXComponent=!0}}]);