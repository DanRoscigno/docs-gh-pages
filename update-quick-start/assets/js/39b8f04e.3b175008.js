"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[17680],{3905:function(e,t,r){r.d(t,{Zo:function(){return o},kt:function(){return d}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),l=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},o=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,p=e.parentName,o=u(e,["components","mdxType","originalType","parentName"]),m=l(r),d=n,f=m["".concat(p,".").concat(d)]||m[d]||c[d]||s;return r?a.createElement(f,i(i({ref:t},o),{},{components:r})):a.createElement(f,i({ref:t},o))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,i=new Array(s);i[0]=m;var u={};for(var p in t)hasOwnProperty.call(t,p)&&(u[p]=t[p]);u.originalType=e,u.mdxType="string"==typeof e?e:n,i[1]=u;for(var l=2;l<s;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},10870:function(e,t,r){r.r(t),r.d(t,{assets:function(){return o},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return c}});var a=r(87462),n=r(63366),s=(r(67294),r(3905)),i=["components"],u={sidebar_position:141},p="deltaSumTimestamp",l={unversionedId:"en/sql-reference/aggregate-functions/reference/deltasumtimestamp",id:"en/sql-reference/aggregate-functions/reference/deltasumtimestamp",title:"deltaSumTimestamp",description:"Adds the difference between consecutive rows. If the difference is negative, it is ignored.",source:"@site/docs/en/sql-reference/aggregate-functions/reference/deltasumtimestamp.md",sourceDirName:"en/sql-reference/aggregate-functions/reference",slug:"/en/sql-reference/aggregate-functions/reference/deltasumtimestamp",permalink:"/docs-gh-pages/update-quick-start/en/sql-reference/aggregate-functions/reference/deltasumtimestamp",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/sql-reference/aggregate-functions/reference/deltasumtimestamp.md",tags:[],version:"current",sidebarPosition:141,frontMatter:{sidebar_position:141},sidebar:"english",previous:{title:"deltaSum",permalink:"/docs-gh-pages/update-quick-start/en/sql-reference/aggregate-functions/reference/deltasum"},next:{title:"sumMap",permalink:"/docs-gh-pages/update-quick-start/en/sql-reference/aggregate-functions/reference/summap"}},o={},c=[],m={toc:c};function d(e){var t=e.components,r=(0,n.Z)(e,i);return(0,s.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"deltasumtimestamp"},"deltaSumTimestamp"),(0,s.kt)("p",null,"Adds the difference between consecutive rows. If the difference is negative, it is ignored."),(0,s.kt)("p",null,"This function is primarily for ",(0,s.kt)("a",{parentName:"p",href:"/docs-gh-pages/update-quick-start/en/sql-reference/statements/create/view#materialized"},"materialized views")," that are ordered by some time bucket-aligned timestamp, for example, a ",(0,s.kt)("inlineCode",{parentName:"p"},"toStartOfMinute"),' bucket. Because the rows in such a materialized view will all have the same timestamp, it is impossible for them to be merged in the "right" order. This function keeps track of the ',(0,s.kt)("inlineCode",{parentName:"p"},"timestamp")," of the values it's seen, so it's possible to order the states correctly during merging."),(0,s.kt)("p",null,"To calculate the delta sum across an ordered collection you can simply use the ",(0,s.kt)("a",{parentName:"p",href:"/docs-gh-pages/update-quick-start/en/sql-reference/aggregate-functions/reference/deltasum#agg_functions-deltasum"},"deltaSum")," function."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Syntax")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"deltaSumTimestamp(value, timestamp)\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Arguments")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"value")," \u2014 Input values, must be some ",(0,s.kt)("a",{parentName:"li",href:"/docs-gh-pages/update-quick-start/en/sql-reference/data-types/int-uint"},"Integer")," type or ",(0,s.kt)("a",{parentName:"li",href:"/docs-gh-pages/update-quick-start/en/sql-reference/data-types/float"},"Float")," type or a ",(0,s.kt)("a",{parentName:"li",href:"/docs-gh-pages/update-quick-start/en/sql-reference/data-types/date"},"Date")," or ",(0,s.kt)("a",{parentName:"li",href:"/docs-gh-pages/update-quick-start/en/sql-reference/data-types/datetime"},"DateTime"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"timestamp")," \u2014 The parameter for order values, must be some ",(0,s.kt)("a",{parentName:"li",href:"/docs-gh-pages/update-quick-start/en/sql-reference/data-types/int-uint"},"Integer")," type or ",(0,s.kt)("a",{parentName:"li",href:"/docs-gh-pages/update-quick-start/en/sql-reference/data-types/float"},"Float")," type or a ",(0,s.kt)("a",{parentName:"li",href:"/docs-gh-pages/update-quick-start/en/sql-reference/data-types/date"},"Date")," or ",(0,s.kt)("a",{parentName:"li",href:"/docs-gh-pages/update-quick-start/en/sql-reference/data-types/datetime"},"DateTime"),".")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Returned value")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Accumulated differences between consecutive values, ordered by the ",(0,s.kt)("inlineCode",{parentName:"li"},"timestamp")," parameter.")),(0,s.kt)("p",null,"Type: ",(0,s.kt)("a",{parentName:"p",href:"/docs-gh-pages/update-quick-start/en/sql-reference/data-types/int-uint"},"Integer")," or ",(0,s.kt)("a",{parentName:"p",href:"/docs-gh-pages/update-quick-start/en/sql-reference/data-types/float"},"Float")," or ",(0,s.kt)("a",{parentName:"p",href:"/docs-gh-pages/update-quick-start/en/sql-reference/data-types/date"},"Date")," or ",(0,s.kt)("a",{parentName:"p",href:"/docs-gh-pages/update-quick-start/en/sql-reference/data-types/datetime"},"DateTime"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example")),(0,s.kt)("p",null,"Query:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT deltaSumTimestamp(value, timestamp)\nFROM (SELECT number AS timestamp, [0, 4, 8, 3, 0, 0, 0, 1, 3, 5][number] AS value FROM numbers(1, 10));\n")),(0,s.kt)("p",null,"Result:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500deltaSumTimestamp(value, timestamp)\u2500\u2510\n\u2502                                  13 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")))}d.isMDXComponent=!0}}]);